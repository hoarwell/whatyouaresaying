{"version":3,"sources":["components/Home.js","components/Router.js","components/App.js","index.js"],"names":["Home","useState","result","setResult","click","setClick","support","setSupport","lang","setLang","keyword","setKeyword","searchResult","setSearchResult","buttonRef","useRef","resultRef","selectRef","imgRef","getRandom","num","Math","floor","random","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","useEffect","mediaDevices","video","audio","then","stream","ctx","AudioContext","mic","createMediaStreamSource","analyser","createAnalyser","play","array","Uint8Array","frequencyBinCount","getByteFrequencyData","length","i","requestAnimationFrame","connect","catch","err","console","log","resultArray","images","zIndex","recognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","count","onresult","e","results","transcript","push","axios","get","res","search","document","querySelector","innerHTML","data","querySelectorAll","forEach","element","hasAttribute","firstImage","getAttribute","current","style","transform","left","innerWidth","width","top","innerHeight","height","className","onClick","start","classList","add","ref","src","alt","onChange","target","value","selected","map","AppRouter","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c20f5eb9.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst Home = () => {\n    const [result, setResult] = useState(\"\"); // 결과\n    const [click, setClick] = useState(false);\n    const [support, setSupport] = useState(false);\n    const [lang, setLang] = useState(\"ko-KR\");\n    const [keyword, setKeyword] = useState(\"\");\n    const [searchResult, setSearchResult] = useState(\"\");\n\n    const buttonRef = useRef();\n    const resultRef = useRef();\n    const selectRef = useRef();\n    const imgRef = useRef();\n\n    const getRandom = (num) => {\n        return Math.floor(Math.random() *  num);\n    }\n\n    navigator.getUserMedia = ( navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia );\n    \n    let constraints = { \n        video : false, \n        audio : true,\n    }\n\n    const handleSelect = (e) => {\n        setLang(e.target.value);\n    }\n\n    const askSupport = () => {\n        if (navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) { \n            setSupport(true);\n        } else {\n            setSupport(false);\n        }\n    }\n\n    useEffect(() => {\n        askSupport();\n    }, [])\n    \n    if(support){\n        let promise = navigator.mediaDevices.getUserMedia(constraints);\n        promise.then(callback).catch(err => console.log(err));\n    }\n\n    function callback(stream) {\n        let ctx = new AudioContext();\n        let mic = ctx.createMediaStreamSource(stream);\n        let analyser = ctx.createAnalyser();\n        \n        mic.connect(analyser);\n\n        function play() {\n            let array = new Uint8Array(analyser.frequencyBinCount);\n            let values = 0;\n            analyser.getByteFrequencyData(array);\n            let length = array.length;\n    \n            for (let i = 0; i < length; i++) {\n                values += (array[i]);\n            }\n            let average = values / length;\n                requestAnimationFrame(play);\n            }\n            \n            play();\n    }\n\n    let resultArray = [];\n    let images = [];\n    let zIndex = 1;\n\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new speechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = lang;\n    \n    const handleClick = () => {\n        setClick(!click);\n        recognition.start();\n        buttonRef.current.classList.add('clicked');\n        document.querySelectorAll('.sentence').forEach((element) => {\n            element.classList.add('clicked');\n        })\n        selectRef.current.classList.add('clicked');\n    }\n\n    const changePosition = () => {\n        if(result) {\n            resultRef.current.style.transform = `scale(${ getRandom(5)})`;\n            resultRef.current.style.left= `${ getRandom(window.innerWidth) - resultRef.current.style.width }px`;\n            resultRef.current.style.top = `${ getRandom(window.innerHeight) - resultRef.current.style.height }px`;\n            resultRef.current.style.zIndex = ++zIndex;\n        }\n        if(imgRef.current && result.length % 10 === 0){\n            imgRef.current.style.left = `${ getRandom(window.innerWidth) - resultRef.current.style.width }px`;\n            imgRef.current.style.top = `${ getRandom(window.innerHeight) - resultRef.current.style.height }px`;\n            imgRef.current.style.zIndex = ++zIndex;\n        }\n    }\n    let count = 1;\n    \n    const getImage = () => {\n        axios.get(`https://images.google.com/images?um=1&hl=en&nfpr=1&q=${keyword}`)\n            .then((res)=> {\n                console.log(++count);\n                const search = document.querySelector(\".search\");\n                search.innerHTML = res.data;\n                search.querySelectorAll(\"img\").forEach((element) => {\n                    if(element.hasAttribute(\"data-src\")){\n                        const firstImage = element.getAttribute('data-src');\n                        images.push(firstImage);\n                        setSearchResult(images[0]);\n                    }\n                });\n            })\n    }\n\n    useEffect(() => {\n        recognition.onresult = (e) => {\n            if(e.results.length > 0){\n                for (let i = 0; i < e.results.length; i++) {\n                    setKeyword(e.results[i][0].transcript);\n                    if (i === e.results.length - 1) {\n                        resultArray.push(e.results[i][0].transcript);\n                        setResult([...resultArray]); // 여기서 짝으로 배열에 넣어주면 될 것 같은데\n                    }\n                }\n            }\n        }\n        if((result.length % 10) === 0){\n            getImage();\n        }\n        changePosition();\n    })\n    console.log(result);\n    // 음정의 톤에 따라 scaleX, scaleY 가 달라지는 이펙트도 좋을 것 같다.\n    // animation의 경로도 바꿔지게\n\n    return (\n        <div className = \"home-container\">\n            <button className = \"enter-button\" onClick = { handleClick } ref = { buttonRef }>\n                <img src = \"https://pngimg.com/uploads/ear/ear_PNG35695.png\" alt = \"\" />\n            </button>\n            <select className = \"select\" onChange = { handleSelect } ref = { selectRef }>\n                <option value=\"ko-KR\" selected>Korean</option> \n                <option value=\"en-US\">English</option>\n                <option value=\"es-ES\">Spanish</option>\n                <option value=\"fr-FR\">French</option>\n                <option value=\"ja-JP\">Japanese</option>\n            </select>\n            {\n                result ? result.map((data, i) => (\n                        <p className = \"result\" ref = { resultRef }>{ data }</p>\n                    )\n                ) : \"\"\n            }\n            {\n                searchResult ? <img className = \"search-image\" ref = { imgRef } src = { searchResult } alt = \"\" /> : \"\"\n            }\n            <div className= \"search\"></div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './Home';\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path = \"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React from 'react';\nimport '../style/App.css';\nimport AppRouter from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}