{"version":3,"sources":["components/Home.js","components/Router.js","components/App.js","index.js"],"names":["Home","useState","result","setResult","click","setClick","buttonRef","useRef","resultRef","resultArray","zIndex","recognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","lang","getRandom","num","Math","floor","random","useEffect","onresult","e","results","length","i","push","transcript","current","style","left","innerWidth","width","top","innerHeight","height","console","log","className","onClick","start","classList","add","ref","map","data","AppRouter","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAyEeA,EAvEF,WACT,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAYC,mBACZC,EAAYD,mBAEdE,EAAc,GAEdC,EAAS,EAGPC,EAAc,IADMC,OAAOC,mBAAqBD,OAAOE,yBAE7DH,EAAYI,YAAa,EACzBJ,EAAYK,KAAO,QAEnB,IAMMC,EAAY,SAACC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,SAAYH,IA8BvC,OAnBAI,qBAAU,WACNX,EAAYY,SAAW,SAACC,GACpB,GAAGA,EAAEC,QAAQC,OAAS,EAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAEC,QAAQC,OAAQC,IAC9BA,IAAMH,EAAEC,QAAQC,OAAS,IACzBjB,EAAYmB,KAAKJ,EAAEC,QAAQE,GAAG,GAAGE,YACjC1B,EAAU,GAAD,OAAKM,MAb3BP,IACCM,EAAUsB,QAAQC,MAAMC,KAAxB,UAAkCf,EAAUL,OAAOqB,YAAczB,EAAUsB,QAAQC,MAAMG,MAAzF,MACA1B,EAAUsB,QAAQC,MAAMI,IAAxB,UAAkClB,EAAUL,OAAOwB,aAAe5B,EAAUsB,QAAQC,MAAMM,OAA1F,MACA7B,EAAUsB,QAAQC,MAAMrB,SAAWA,MAkB3C4B,QAAQC,IAAIrC,GAMR,sBAAKsC,UAAY,iBAAjB,UACI,wBAAQA,UAAY,eAAeC,QAvCvB,WAChBpC,GAAUD,GACVO,EAAY+B,QACZpC,EAAUwB,QAAQa,UAAUC,IAAI,YAoCiCC,IAAQvC,EAArE,mBAIIJ,EACIA,EAAO4C,KAAI,SAACC,EAAMpB,GAAP,OACP,yBAASa,UAAY,SAASK,IAAQrC,EAAtC,SACMuC,OAGV,OCnDLC,EAZG,WACd,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAApB,SACI,cAAC,EAAD,WCGLC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCHNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.665b00c1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Home = () => {\n    const [result, setResult] = useState(\"\"); // 결과\n    const [click, setClick] = useState(false);\n\n    const buttonRef = useRef();\n    const resultRef = useRef();\n\n    let resultArray = [];\n\n    let zIndex = 1;\n\n    const speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new speechRecognition();\n    recognition.continuous = true;\n    recognition.lang = \"en-US\";\n    \n    const handleClick = () => {\n        setClick(!click);\n        recognition.start();\n        buttonRef.current.classList.add('clicked');\n    }\n\n    const getRandom = (num) => {\n        return Math.floor(Math.random() *  num);\n    }\n\n    const changePosition = () => {\n        if(result) {\n            resultRef.current.style.left= `${ getRandom(window.innerWidth) - resultRef.current.style.width }px`;\n            resultRef.current.style.top = `${ getRandom(window.innerHeight) - resultRef.current.style.height }px`;\n            resultRef.current.style.zIndex = ++zIndex;\n        }\n    }\n\n    useEffect(() => {\n        recognition.onresult = (e) => {\n            if(e.results.length > 0){\n                for (let i = 0; i < e.results.length; i++) {\n                    if (i === e.results.length - 1) {\n                        resultArray.push(e.results[i][0].transcript);\n                        setResult([...resultArray]);\n                    }\n                }\n            }\n        }\n        changePosition();\n    })\n    \n    console.log(result);\n\n    // 음정의 톤에 따라 scaleX, scaleY 가 달라지는 이펙트도 좋을 것 같다.\n    // animation의 경로도 바꿔지게\n\n    return (\n        <div className = \"home-container\">\n            <button className = \"enter-button\" onClick = { handleClick } ref = { buttonRef }>\n                ENTER\n            </button>\n            {\n                result ? (\n                    result.map((data, i) => (\n                        <marquee className = \"result\" ref = { resultRef }>\n                            { data }\n                        </marquee>\n                    ))\n                ) : \"\"\n            }\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './Home';\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path = \"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React from 'react';\nimport '../style/App.css';\nimport AppRouter from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}